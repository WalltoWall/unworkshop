/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from "./routes/__root"
import { Route as KickoffRouteImport } from "./routes/kickoff"
import { Route as CallbackRouteImport } from "./routes/callback"
import { Route as AuthenticatedRouteImport } from "./routes/_authenticated"
import { Route as IndexRouteImport } from "./routes/index"
import { Route as KickoffCodeRouteImport } from "./routes/kickoff.$code"
import { Route as AuthenticatedPresenterRouteImport } from "./routes/_authenticated.presenter"
import { Route as KickoffCodeExerciseSlugRouteImport } from "./routes/kickoff.$code_.$exerciseSlug"
import { Route as AuthenticatedPresenterCodeRouteImport } from "./routes/_authenticated.presenter_.$code"
import { Route as KickoffCodeExerciseSlugGroupsRouteImport } from "./routes/kickoff.$code_.$exerciseSlug.groups"
import { Route as AuthenticatedPresenterCodeExerciseSlugRouteImport } from "./routes/_authenticated.presenter_.$code.$exerciseSlug"
import { Route as KickoffCodeExerciseSlugGroupsGroupSlugRouteImport } from "./routes/kickoff.$code_.$exerciseSlug.groups_.$groupSlug"

const KickoffRoute = KickoffRouteImport.update({
  id: "/kickoff",
  path: "/kickoff",
  getParentRoute: () => rootRouteImport,
} as any)
const CallbackRoute = CallbackRouteImport.update({
  id: "/callback",
  path: "/callback",
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: "/_authenticated",
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any)
const KickoffCodeRoute = KickoffCodeRouteImport.update({
  id: "/$code",
  path: "/$code",
  getParentRoute: () => KickoffRoute,
} as any)
const AuthenticatedPresenterRoute = AuthenticatedPresenterRouteImport.update({
  id: "/presenter",
  path: "/presenter",
  getParentRoute: () => AuthenticatedRoute,
} as any)
const KickoffCodeExerciseSlugRoute = KickoffCodeExerciseSlugRouteImport.update({
  id: "/$code_/$exerciseSlug",
  path: "/$code/$exerciseSlug",
  getParentRoute: () => KickoffRoute,
} as any)
const AuthenticatedPresenterCodeRoute =
  AuthenticatedPresenterCodeRouteImport.update({
    id: "/presenter_/$code",
    path: "/presenter/$code",
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const KickoffCodeExerciseSlugGroupsRoute =
  KickoffCodeExerciseSlugGroupsRouteImport.update({
    id: "/groups",
    path: "/groups",
    getParentRoute: () => KickoffCodeExerciseSlugRoute,
  } as any)
const AuthenticatedPresenterCodeExerciseSlugRoute =
  AuthenticatedPresenterCodeExerciseSlugRouteImport.update({
    id: "/$exerciseSlug",
    path: "/$exerciseSlug",
    getParentRoute: () => AuthenticatedPresenterCodeRoute,
  } as any)
const KickoffCodeExerciseSlugGroupsGroupSlugRoute =
  KickoffCodeExerciseSlugGroupsGroupSlugRouteImport.update({
    id: "/groups_/$groupSlug",
    path: "/groups/$groupSlug",
    getParentRoute: () => KickoffCodeExerciseSlugRoute,
  } as any)

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute
  "/callback": typeof CallbackRoute
  "/kickoff": typeof KickoffRouteWithChildren
  "/presenter": typeof AuthenticatedPresenterRoute
  "/kickoff/$code": typeof KickoffCodeRoute
  "/presenter/$code": typeof AuthenticatedPresenterCodeRouteWithChildren
  "/kickoff/$code/$exerciseSlug": typeof KickoffCodeExerciseSlugRouteWithChildren
  "/presenter/$code/$exerciseSlug": typeof AuthenticatedPresenterCodeExerciseSlugRoute
  "/kickoff/$code/$exerciseSlug/groups": typeof KickoffCodeExerciseSlugGroupsRoute
  "/kickoff/$code/$exerciseSlug/groups/$groupSlug": typeof KickoffCodeExerciseSlugGroupsGroupSlugRoute
}
export interface FileRoutesByTo {
  "/": typeof IndexRoute
  "/callback": typeof CallbackRoute
  "/kickoff": typeof KickoffRouteWithChildren
  "/presenter": typeof AuthenticatedPresenterRoute
  "/kickoff/$code": typeof KickoffCodeRoute
  "/presenter/$code": typeof AuthenticatedPresenterCodeRouteWithChildren
  "/kickoff/$code/$exerciseSlug": typeof KickoffCodeExerciseSlugRouteWithChildren
  "/presenter/$code/$exerciseSlug": typeof AuthenticatedPresenterCodeExerciseSlugRoute
  "/kickoff/$code/$exerciseSlug/groups": typeof KickoffCodeExerciseSlugGroupsRoute
  "/kickoff/$code/$exerciseSlug/groups/$groupSlug": typeof KickoffCodeExerciseSlugGroupsGroupSlugRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  "/": typeof IndexRoute
  "/_authenticated": typeof AuthenticatedRouteWithChildren
  "/callback": typeof CallbackRoute
  "/kickoff": typeof KickoffRouteWithChildren
  "/_authenticated/presenter": typeof AuthenticatedPresenterRoute
  "/kickoff/$code": typeof KickoffCodeRoute
  "/_authenticated/presenter_/$code": typeof AuthenticatedPresenterCodeRouteWithChildren
  "/kickoff/$code_/$exerciseSlug": typeof KickoffCodeExerciseSlugRouteWithChildren
  "/_authenticated/presenter_/$code/$exerciseSlug": typeof AuthenticatedPresenterCodeExerciseSlugRoute
  "/kickoff/$code_/$exerciseSlug/groups": typeof KickoffCodeExerciseSlugGroupsRoute
  "/kickoff/$code_/$exerciseSlug/groups_/$groupSlug": typeof KickoffCodeExerciseSlugGroupsGroupSlugRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | "/"
    | "/callback"
    | "/kickoff"
    | "/presenter"
    | "/kickoff/$code"
    | "/presenter/$code"
    | "/kickoff/$code/$exerciseSlug"
    | "/presenter/$code/$exerciseSlug"
    | "/kickoff/$code/$exerciseSlug/groups"
    | "/kickoff/$code/$exerciseSlug/groups/$groupSlug"
  fileRoutesByTo: FileRoutesByTo
  to:
    | "/"
    | "/callback"
    | "/kickoff"
    | "/presenter"
    | "/kickoff/$code"
    | "/presenter/$code"
    | "/kickoff/$code/$exerciseSlug"
    | "/presenter/$code/$exerciseSlug"
    | "/kickoff/$code/$exerciseSlug/groups"
    | "/kickoff/$code/$exerciseSlug/groups/$groupSlug"
  id:
    | "__root__"
    | "/"
    | "/_authenticated"
    | "/callback"
    | "/kickoff"
    | "/_authenticated/presenter"
    | "/kickoff/$code"
    | "/_authenticated/presenter_/$code"
    | "/kickoff/$code_/$exerciseSlug"
    | "/_authenticated/presenter_/$code/$exerciseSlug"
    | "/kickoff/$code_/$exerciseSlug/groups"
    | "/kickoff/$code_/$exerciseSlug/groups_/$groupSlug"
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  CallbackRoute: typeof CallbackRoute
  KickoffRoute: typeof KickoffRouteWithChildren
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/kickoff": {
      id: "/kickoff"
      path: "/kickoff"
      fullPath: "/kickoff"
      preLoaderRoute: typeof KickoffRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/callback": {
      id: "/callback"
      path: "/callback"
      fullPath: "/callback"
      preLoaderRoute: typeof CallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/_authenticated": {
      id: "/_authenticated"
      path: ""
      fullPath: ""
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/kickoff/$code": {
      id: "/kickoff/$code"
      path: "/$code"
      fullPath: "/kickoff/$code"
      preLoaderRoute: typeof KickoffCodeRouteImport
      parentRoute: typeof KickoffRoute
    }
    "/_authenticated/presenter": {
      id: "/_authenticated/presenter"
      path: "/presenter"
      fullPath: "/presenter"
      preLoaderRoute: typeof AuthenticatedPresenterRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    "/kickoff/$code_/$exerciseSlug": {
      id: "/kickoff/$code_/$exerciseSlug"
      path: "/$code/$exerciseSlug"
      fullPath: "/kickoff/$code/$exerciseSlug"
      preLoaderRoute: typeof KickoffCodeExerciseSlugRouteImport
      parentRoute: typeof KickoffRoute
    }
    "/_authenticated/presenter_/$code": {
      id: "/_authenticated/presenter_/$code"
      path: "/presenter/$code"
      fullPath: "/presenter/$code"
      preLoaderRoute: typeof AuthenticatedPresenterCodeRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    "/kickoff/$code_/$exerciseSlug/groups": {
      id: "/kickoff/$code_/$exerciseSlug/groups"
      path: "/groups"
      fullPath: "/kickoff/$code/$exerciseSlug/groups"
      preLoaderRoute: typeof KickoffCodeExerciseSlugGroupsRouteImport
      parentRoute: typeof KickoffCodeExerciseSlugRoute
    }
    "/_authenticated/presenter_/$code/$exerciseSlug": {
      id: "/_authenticated/presenter_/$code/$exerciseSlug"
      path: "/$exerciseSlug"
      fullPath: "/presenter/$code/$exerciseSlug"
      preLoaderRoute: typeof AuthenticatedPresenterCodeExerciseSlugRouteImport
      parentRoute: typeof AuthenticatedPresenterCodeRoute
    }
    "/kickoff/$code_/$exerciseSlug/groups_/$groupSlug": {
      id: "/kickoff/$code_/$exerciseSlug/groups_/$groupSlug"
      path: "/groups/$groupSlug"
      fullPath: "/kickoff/$code/$exerciseSlug/groups/$groupSlug"
      preLoaderRoute: typeof KickoffCodeExerciseSlugGroupsGroupSlugRouteImport
      parentRoute: typeof KickoffCodeExerciseSlugRoute
    }
  }
}

interface AuthenticatedPresenterCodeRouteChildren {
  AuthenticatedPresenterCodeExerciseSlugRoute: typeof AuthenticatedPresenterCodeExerciseSlugRoute
}

const AuthenticatedPresenterCodeRouteChildren: AuthenticatedPresenterCodeRouteChildren =
  {
    AuthenticatedPresenterCodeExerciseSlugRoute:
      AuthenticatedPresenterCodeExerciseSlugRoute,
  }

const AuthenticatedPresenterCodeRouteWithChildren =
  AuthenticatedPresenterCodeRoute._addFileChildren(
    AuthenticatedPresenterCodeRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedPresenterRoute: typeof AuthenticatedPresenterRoute
  AuthenticatedPresenterCodeRoute: typeof AuthenticatedPresenterCodeRouteWithChildren
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedPresenterRoute: AuthenticatedPresenterRoute,
  AuthenticatedPresenterCodeRoute: AuthenticatedPresenterCodeRouteWithChildren,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface KickoffCodeExerciseSlugRouteChildren {
  KickoffCodeExerciseSlugGroupsRoute: typeof KickoffCodeExerciseSlugGroupsRoute
  KickoffCodeExerciseSlugGroupsGroupSlugRoute: typeof KickoffCodeExerciseSlugGroupsGroupSlugRoute
}

const KickoffCodeExerciseSlugRouteChildren: KickoffCodeExerciseSlugRouteChildren =
  {
    KickoffCodeExerciseSlugGroupsRoute: KickoffCodeExerciseSlugGroupsRoute,
    KickoffCodeExerciseSlugGroupsGroupSlugRoute:
      KickoffCodeExerciseSlugGroupsGroupSlugRoute,
  }

const KickoffCodeExerciseSlugRouteWithChildren =
  KickoffCodeExerciseSlugRoute._addFileChildren(
    KickoffCodeExerciseSlugRouteChildren,
  )

interface KickoffRouteChildren {
  KickoffCodeRoute: typeof KickoffCodeRoute
  KickoffCodeExerciseSlugRoute: typeof KickoffCodeExerciseSlugRouteWithChildren
}

const KickoffRouteChildren: KickoffRouteChildren = {
  KickoffCodeRoute: KickoffCodeRoute,
  KickoffCodeExerciseSlugRoute: KickoffCodeExerciseSlugRouteWithChildren,
}

const KickoffRouteWithChildren =
  KickoffRoute._addFileChildren(KickoffRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  CallbackRoute: CallbackRoute,
  KickoffRoute: KickoffRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
